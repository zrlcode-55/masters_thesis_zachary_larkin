name: Thesis Validation Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  accuracy-validation:
    name: "Accuracy: Validate Against Published Research"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Network Model Accuracy
      run: |
        python tests/test_accuracy.py
        echo "✓ Network parameters match published research (Semtech, Bor+, ETSI)"
    
    - name: Validate Airtime Formula
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        from network.lora_config import LoRaConfig
        config = LoRaConfig(spreading_factor=9)
        airtime = config.compute_airtime(51)
        assert 0.300 <= airtime <= 0.320, f'Airtime {airtime:.3f}s outside Semtech range'
        print(f'✓ Airtime validation: {airtime*1000:.1f}ms (Semtech: 300-320ms)')
        "
    
    - name: Validate Collision Model
      run: |
        python -c "
        import sys, numpy as np
        sys.path.insert(0, 'src')
        from network.lpwan_network import LPWANNetwork
        from network.lora_config import LoRaConfig
        net = LPWANNetwork(100, LoRaConfig(duty_cycle=0.01))
        p_s = net.compute_collision_probability()
        expected = np.exp(-2.0)
        assert abs(p_s - expected) < 0.01, f'p_s={p_s:.3f} != {expected:.3f} (Bor+ 2016)'
        print(f'✓ Collision model: p_s={p_s:.3f} (Bor+ 2016: {expected:.3f})')
        "

  novelty-validation:
    name: "Novelty: Validate Novel Contributions"
    runs-on: ubuntu-latest
    needs: accuracy-validation
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: "STRICT TEST: IoU Acceptance vs MIMIC"
      run: |
        python tests/test_novelty.py::test_iou_defends_against_mimic
        echo "✓ IoU acceptance rejects >80% of MIMIC attacks"
    
    - name: "STRICT TEST: Adaptive λ Speedup"
      run: |
        python tests/test_novelty.py::test_adaptive_lambda_speedup
        echo "✓ Adaptive λ converges 2× faster than fixed λ"
    
    - name: "STRICT TEST: Continuous Re-Stabilization"
      run: |
        python tests/test_novelty.py::test_continuous_restabilization
        echo "✓ Re-stabilization <50% of initial convergence time"
    
    - name: "STRICT TEST: MIMIC Harder Than SPIKE"
      run: |
        python tests/test_novelty.py::test_mimic_harder_than_spike
        echo "✓ MIMIC causes 3× more bias than SPIKE without IoU"

  statistical-rigor:
    name: "Rigor: Statistical Significance"
    runs-on: ubuntu-latest
    needs: [accuracy-validation, novelty-validation]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Multi-Seed Reproducibility
      run: |
        python tests/test_statistical_significance.py::test_multi_seed_reproducibility
        echo "✓ Results reproducible across 20 seeds (p < 0.05)"
    
    - name: Convergence Bound Validation
      run: |
        python tests/test_statistical_significance.py::test_convergence_bound_accuracy
        echo "✓ Theoretical bound predicts within 15% of measured"
    
    - name: Byzantine Fraction Scaling
      run: |
        python tests/test_statistical_significance.py::test_byzantine_scaling
        echo "✓ Algorithm robust up to 20% Byzantine nodes"

  fail-fast-checks:
    name: "Fail-Fast: Novel or Refine"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: "FAIL-FAST: Ensure IoU Acceptance Exists"
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        try:
            from consensus.acceptance import compute_iou
            print('✓ IoU acceptance implemented')
        except ImportError:
            print('❌ IoU acceptance not implemented yet')
            sys.exit(1)
        "
    
    - name: "FAIL-FAST: Ensure Adaptive λ Exists"
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        try:
            from consensus.contraction import AdaptiveContractionScheduler
            print('✓ Adaptive λ implemented')
        except ImportError:
            print('❌ Adaptive λ not implemented yet')
            sys.exit(1)
        "
    
    - name: "FAIL-FAST: Ensure Continuous Tracking Exists"
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        try:
            from metrics.stability_tracker import StabilityTracker
            print('✓ Continuous stability tracking implemented')
        except ImportError:
            print('❌ Continuous tracking not implemented yet')
            sys.exit(1)
        "

  thesis-ready-check:
    name: "🎓 Thesis Ready?"
    runs-on: ubuntu-latest
    needs: [accuracy-validation, novelty-validation, statistical-rigor]
    if: success()
    
    steps:
    - name: Celebrate Success
      run: |
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "🎉 ALL THESIS VALIDATION TESTS PASSED! 🎉"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo ""
        echo "✅ Accuracy: Parameters match published research"
        echo "✅ Novelty: Contributions provide measurable improvements"
        echo "✅ Rigor: Results are statistically significant"
        echo ""
        echo "🎓 YOUR THESIS CONTRIBUTIONS ARE DEFENSIBLE!"
        echo ""
        echo "Next Steps:"
        echo "1. Run experiments with increased Byzantine fraction"
        echo "2. Generate plots for thesis document"
        echo "3. Write up results section"
        echo ""

